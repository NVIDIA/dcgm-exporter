// Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NVIDIA/dcgm-exporter/internal/pkg/elf (interfaces: ELF)
//
// Generated by this command:
//
//	mockgen -destination=../../mocks/pkg/elf/mock_elf.go -package=elf -copyright_file=../../../hack/header.txt . ELF
//

// Package elf is a generated GoMock package.
package elf

import (
	elf "debug/elf"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockELF is a mock of ELF interface.
type MockELF struct {
	ctrl     *gomock.Controller
	recorder *MockELFMockRecorder
	isgomock struct{}
}

// MockELFMockRecorder is the mock recorder for MockELF.
type MockELFMockRecorder struct {
	mock *MockELF
}

// NewMockELF creates a new mock instance.
func NewMockELF(ctrl *gomock.Controller) *MockELF {
	mock := &MockELF{ctrl: ctrl}
	mock.recorder = &MockELFMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockELF) EXPECT() *MockELFMockRecorder {
	return m.recorder
}

// Open mocks base method.
func (m *MockELF) Open(name string) (*elf.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Open", name)
	ret0, _ := ret[0].(*elf.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Open indicates an expected call of Open.
func (mr *MockELFMockRecorder) Open(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Open", reflect.TypeOf((*MockELF)(nil).Open), name)
}
