// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NVIDIA/dcgm-exporter/internal/pkg/nvmlprovider (interfaces: NVMLClient)
//
// Generated by this command:
//
//	mockgen -destination=mocks/pkg/nvmlprovider/mock_provider.go github.com/NVIDIA/dcgm-exporter/internal/pkg/nvmlprovider NVMLClient
//

// Package mock_nvmlprovider is a generated GoMock package.
package mock_nvmlprovider

import (
	reflect "reflect"

	nvmlprovider "github.com/NVIDIA/dcgm-exporter/internal/pkg/nvmlprovider"
	gomock "go.uber.org/mock/gomock"
)

// MockNVMLClient is a mock of NVMLClient interface.
type MockNVMLClient struct {
	ctrl     *gomock.Controller
	recorder *MockNVMLClientMockRecorder
}

// MockNVMLClientMockRecorder is the mock recorder for MockNVMLClient.
type MockNVMLClientMockRecorder struct {
	mock *MockNVMLClient
}

// NewMockNVMLClient creates a new mock instance.
func NewMockNVMLClient(ctrl *gomock.Controller) *MockNVMLClient {
	mock := &MockNVMLClient{ctrl: ctrl}
	mock.recorder = &MockNVMLClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNVMLClient) EXPECT() *MockNVMLClientMockRecorder {
	return m.recorder
}

// GetMIGDeviceInfoByID mocks base method.
func (m *MockNVMLClient) GetMIGDeviceInfoByID(arg0 string) (*nvmlprovider.MIGDeviceInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMIGDeviceInfoByID", arg0)
	ret0, _ := ret[0].(*nvmlprovider.MIGDeviceInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMIGDeviceInfoByID indicates an expected call of GetMIGDeviceInfoByID.
func (mr *MockNVMLClientMockRecorder) GetMIGDeviceInfoByID(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMIGDeviceInfoByID", reflect.TypeOf((*MockNVMLClient)(nil).GetMIGDeviceInfoByID), arg0)
}
